name: Deploy to Dev Server
on:
  pull_request:
    types: [closed]
    branches:
      - develop

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure SSH
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Deploy to dev server
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # Обновляем путь к Git для CentOS
            export PATH=$PATH:/usr/bin

            # Переходим в директорию проекта
            cd ${{ secrets.PROJECT_PATH }}

            # Проверяем наличие изменений и сбрасываем локальные изменения если есть
            git reset --hard
            git clean -fd

            # Получаем и применяем изменения
            git fetch origin develop
            git checkout develop
            git pull origin develop

            # Установка прав на файлы (если необходимо)
            chmod -R 755 .
            find . -type f -exec chmod 644 {} \;

            # Если используется composer
            # /usr/local/bin/composer install --no-dev

            # Если нужно очистить кеш Битрикс
            # php -f bitrix/modules/main/tools/cache.php
          EOF

      - name: Notify about successful deployment
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Изменения успешно развернуты на dev сервере'
            })

      - name: Notify about deployment failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Ошибка при развертывании на dev сервере'
            })

  check_conflicts:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged != true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for merge conflicts
        run: |
          git fetch origin develop
          if git merge-tree $(git merge-base HEAD develop) HEAD develop | grep -i "<<<<<"; then
            echo "::error::Обнаружены конфликты слияния!"
            exit 1
          fi

      - name: Notify about conflicts
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ Обнаружены конфликты слияния. Пожалуйста, разрешите конфликты перед мерджем.'
            })
